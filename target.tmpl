<!DOCTYPE html>
<html>
	<head>
		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<meta charset="utf-8">
		<title>Identification of Church and Mosque by Deep Learning</title>
		<style>
			/* Always set the map height explicitly to define the size of the div
			 * element that contains the map. */
			#map {
				height: 100%;
			}
			/* Optional: Makes the sample page fill the window. */
			html, body {
				height: 100%;
				margin: 0;
				padding: 0;
			}
		</style>
	</head>
	<body>
		<div id="map"></div>
		<script>
			
			// The following example creates complex markers to indicate beaches near
			// Sydney, NSW, Australia. Note that the anchor is set to (0,32) to correspond
			// to the base of the flagpole.
			
			function initMap() {
				var map = new google.maps.Map(document.getElementById('map'), {
											  zoom: 4,
											  center: {lat: 48.2082, lng: 16.3738}
											  });
											  
				setMarkers(map);
			}
		
			function setMarkers(map) {
				// Adds markers to the map.
						   
				// Marker sizes are expressed as a Size of X,Y where the origin of the image
				// (0,0) is located in the top left of the image.
						   
				// Origins, anchor positions and coordinates of the marker increase in the X
				// direction to the right and in the Y direction down.
				var image_00 = {
					url: 'http://labs.google.com/ridefinder/images/mm_20_white.png',
					// This marker is 12 pixels wide by 20 pixels high.
					size: new google.maps.Size(12, 20),
					// The origin for this image is (0, 0).
					origin: new google.maps.Point(0, 0),
				};
				var image_01 = {
					url: 'http://labs.google.com/ridefinder/images/mm_20_blue.png',
					// This marker is 12 pixels wide by 20 pixels high.
					size: new google.maps.Size(12, 20),
					// The origin for this image is (0, 0).
					origin: new google.maps.Point(0, 0),
				};
				var image_02 = {
					url: 'http://labs.google.com/ridefinder/images/mm_20_green.png',
					// This marker is 12 pixels wide by 20 pixels high.
					size: new google.maps.Size(12, 20),
					// The origin for this image is (0, 0).
					origin: new google.maps.Point(0, 0),
				};
				// Shapes define the clickable region of the icon. The type defines an HTML
				// <area> element 'poly' which traces out a polygon as a series of X,Y points.
				// The final coordinate closes the poly by connecting to the first coordinate.
				var shape = {
					coords: [1, 1, 1, 20, 18, 20, 18, 1],
					type: 'poly'
				};
				
				// Data for the markers consisting of a name, a LatLng and a zIndex for the
				// order in which these markers should display on top of each other.
				var spots = [<!--tmpl:embedded-->];
				
				// Display
				for (var i = 0; i < spots.length; i++) {
					var spot = spots[i];
					var marker = new google.maps.Marker({
											  position: {lat: spot[1], lng: spot[2]},
											  map: map,
											  icon: spot[3],
											  shape: shape,
											  title: spot[0]
					});
				}
			}
		</script>
		<script async defer
			src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAFbMDBzBrF3bpHc-nt4H_IGLo1EuTs0m8&callback=initMap">
		</script>
	</body>
</html>

